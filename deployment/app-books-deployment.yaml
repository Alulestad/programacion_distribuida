# kubectl apply -f app-authors-deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-books-deployment # Nombre del deployment
  labels:
    app: app-books
spec:
  replicas: 1 # NÃºmero de replicas
  selector:
    matchLabels:
      app: app-books # Nombre del deployment en este caso el nombre de la app
  template:
    metadata:
      name: app-books
      labels:
        app: app-books # Nombre del deployment en este caso el nombre de la app
    spec:
      restartPolicy: Always
      containers:
      - name: app-books # Nombre del contenedor
        image: app-authors # Imagen del contenedor puede ser con dockerhub o con un registry privado
        #image: docker.io/dbllumiquinga/app-authors:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080 # Puerto del contenedor
          protocol: TCP
        env:
          - name: QUARKUS_DATASOURCE_JDBC_URL
            value: jdbc:postgresql://dbllumiquinga.postgres.database.azure.com:5432/distribuida
          - name: QUARKUS_DATASOURCE_USERNAME
            value: postgres
          - name: QUARKUS_DATASOURCE_PASSWORD
            value: "VLAD753."
          - name: CONSUL_HOST
            value: consul
          - name: QUARKUS_PORT
            value: "8500"
          - name: QUARKUS_HTTP_PORT
            value: "8080"


#------- balanceo
---
apiVersion: v1
kind: Service
metadata:
  name: app-books-service # Nombre del servicio
spec:
  type: ClusterIP
  #type: LoadBalancer # en caso de usar por ejemplo azure
  selector:
    app: app-books
  ports:
    - protocol: TCP
      port: 8080 #este es el puerto en la maquina
      targetPort: 8080 #este en los pots
